
program that tests and can execute a trading algorithm

TODO:
    optimize (major refactor)
        analysis obj per stock
            prog start calc and store all of following
                load all historical data
                calc all indicators
                eval each day
            method that returns info for a date
                called during training, testing
            backtest
                call method for day info
                thats it
            additionally stores trades, calcs stats
            will also simplify plotting
                
    backtest
        add max/min/avg yearly return stats
    backtest
        order choices by eval then by cheapest share
            buy most likely to trend, then cheapest first
    analyze
        all indicators are set 1 or -1 to indicate a buy or sell
        weights are adjusted for how good indicator
            learned?
            manual?
        eval threshold
            how many indicators pointing up vs down
                weight down more heavily
            weighted sum should be above 80%? max value
    analyze class
        decide on, calc all indicators
        better pick_trade algo
    everywhere
        round all cash values down to two decimal places on transaction
        int round shares
    analyze
        pick_trades choose share count
            base on eval, price, how many buying that day
    config
        organize, cleanup (into dicts?)
    backtest (train weights)
        batch testing
        more stats
    backtest
        better account for splits, dividends


FUTURE:
    auto query current data/csv and add to db
        https://github.com/dennislwy/YahooFinanceAPI
        https://stackoverflow.com/questions/44105187/error-in-downloading-csv-from-new-yahoo-finance-historical-data
    ACCOUNT FOR SPLITS / DIVIDENDS
        info already in db
    read the news (yahoo rss feeds are ticker based)
        https://developer.yahoo.com/finance/
    add full database functionality
        store all things that happen
    update by ticker name
        download csv, load to db
    q-learning based machine learning algo
        learn weights?
    stock prices --> graph --> pixels --> ml patterns
        conv net for recognition
        pattern dataset generated w/noise --> self labeled
    support / resistance calcuations by gradient boosting methods

    iterate through data once and calculate all indicators

    add fields to analyze object
        predicted price direction
        predicted price after movement
        predicted timeframe
        current price
        shares able to be bought (use to choose between ties, add to eval func)
        
    package the program into executable
        http://py2exe.org/index.cgi/Tutorial

